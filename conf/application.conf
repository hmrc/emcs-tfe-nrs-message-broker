# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = emcs-tfe-nrs-message-broker

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

# Play Modules
play.modules.enabled += "config.Module"

play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

# Auth Module
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Microservice specific config

mongodb {
  uri = "mongodb://localhost:27017/emcs-tfe-nrs-message-broker"
  replaceIndexes = true
  # TTL only applicable on updatedAt field, will only expire when the record hasn't been updated in 30 days
  ttl = 30days
  numberOfRecordsToRetrieve = 10
}

microservice {
  services {
    auth {
      host = localhost
      port = 8500
    }

    nrs {
      host = localhost
      port = 9389
      apiKey = "297887bc-d3b0-48f8-83dc-6dd176a009c5"
    }
  }
}

schedules {
  SendSubmissionToNRSJob {
    description = "Job to send submissions to NRS"
    expression = "0_0/5_*_?_*_*_*"  # run every 5 minutes
    enabled = true
    mongoLockTimeout = 7200 # 2 hours in seconds used to release the mongo lock in case the job fails with exception and doesn't unlock
  }

  MonitoringJob {
    description = "Job to log number of records in each state"
    expression = "0_0/7_*_?_*_*_*"  # run every 7 minutes (stops reading/writing at same time)
    enabled = false
    mongoLockTimeout = 7200 # 2 hours in seconds used to release the mongo lock in case the job fails with exception and doesn't unlock
  }
}

